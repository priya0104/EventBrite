version: '3.4'

networks:
  frontend:
  backend:

services:
  event:
    image: events/event
    build:
      context: .\EventCatalogAPI
      dockerfile: Dockerfile
    environment:
      DatabaseServer: mssqlserver
      DatabaseName: EventCatalogDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
      ExternalCatalogBaseUrl: http://localhost:6071
    ports:
      - "6071:80"
    container_name: eventcatalog
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: events/tokenapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:6070
    ports:
      - "6072:80"
    container_name: tokenserviceapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
    
  cart:
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    image: events/cartapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.29.215:6072
      ConnectionString: basket.data
    ports:
      - "6073:80"
    container_name: cartapi
    networks:
      - backend
      - frontend
    depends_on:
      - basket.data
      - tokenserver

  webmvc:
    build:
      context: .\WebMVC
      dockerfile: Dockerfile
    image: events/webmvc
    container_name: webshop
    environment:
      CatalogUrl: http://event
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.29.215:6072
      callBackUrl: http://localhost:6070
    ports:
      - "6070:80"
    networks:
      - frontend
    depends_on:
      - event
      - tokenserver

  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    container_name: sqlserverevent
    ports:
      - "1448:1433"
    networks:
     - backend

  basket.data:
    image: redis
    ports:
      - "1449:6379"
    networks:
    - backend


